{"version":3,"sources":["components/About.jsx","components/Navbar.jsx","components/TextForm.jsx","components/Alert.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","border","myStyle","setmyStyle","btnText","setBtnText","className","style","id","type","onClick","Navbar","props","mode","to","title","abouts","toggleMode","role","htmlFor","defaultProps","TextForm","text","setText","heading","value","onChange","event","target","rows","new_text","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fed403e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction About() {\r\n\r\n    const [myStyle, setmyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white',\r\n        border: '2px solid white',\r\n    });\r\n\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = () => {\r\n        if (myStyle.color === 'black') {\r\n            setmyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n            });\r\n            setBtnText(\"Enable Light Mode\");\r\n        }\r\n        else {\r\n            setmyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white',\r\n                border: '2px solid white',\r\n            });\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-5\" style={myStyle}>\r\n                <h1 className=\"my-3\">About Us</h1>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{btnText}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.abouts}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch mx-3 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    abouts: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"TextUtils\",\r\n    abouts: \"About\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction TextForm(props) {\r\n\r\n    const onUpClick = () => {\r\n        let new_text = text.toUpperCase();\r\n        setText(new_text);\r\n        props.showAlert('Captitalized', 'success');\r\n    }\r\n\r\n    const onLowClick = () => {\r\n        let new_text = text.toLowerCase();\r\n        setText(new_text);\r\n        props.showAlert('De-Captitalized', 'success');\r\n    }\r\n\r\n    const clearIt = () => {\r\n        setText(\"\");\r\n        props.showAlert('All text erased', 'success');\r\n    };\r\n\r\n    // This is for changing the texts in textarea\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-4\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label\">\r\n                        <h1>{props.heading}</h1>\r\n                    </label>\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-success mx-2 my-2\" onClick={onUpClick}>\r\n                    Convert to Upper Case\r\n                </button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" onClick={onLowClick}>\r\n                    Convert to Lower Case\r\n                </button>\r\n                <button className=\"btn btn-danger mx-2 my-2\" onClick={clearIt}>\r\n                    Clear\r\n                </button>\r\n                <div className=\"container my-3\">\r\n                    <h2>Your text Summary</h2>\r\n                    <p className='my-3'>You have {text.split(\" \").length} words and {text.length} alphabets.</p>\r\n                    <p className='my-3'>You need {0.008 * text.split(\" \").length} mins to read {text.split(\" \").length} words.</p>\r\n                    <h3>Preview</h3>\r\n                    <p>{text.length > 0 ? text : \"Enter somehing to have it's preview\"}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm;\r\n\r\n// What is Lorem Ipsum ?\r\n//     Lorem Ipsum is simply dummy text of the printing and typesetting industry.Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\r\n// Why do we use it ?\r\n//     It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.The point of using Lorem Ipsum is that it has a more - or - less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.Various versions have evolved over the years, sometimes by accident, sometimes on purpose(injected humour and the like).\r\n\r\n\r\n// Where does it come from ?\r\n//     Contrary to popular belief, Lorem Ipsum is not simply random text.It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.Richard McClintock, a Latin professor at Hampden - Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\"(The Extremes of Good and Evil) by Cicero, written in 45 BC.This book is a treatise on the theory of ethics, very popular during the Renaissance.The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n\r\n// The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested.Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H.Rackham.\r\n\r\n// Where can I get some ?\r\n//     There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet.It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable.The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non - characteristic words etc.","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    };\r\n\r\n    return (\r\n        props.alert && <div className={`container alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n            <strong>{capitalize(props.alert.type)}: </strong>{props.alert.msg}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      showAlert('Dark Mode has been enabled', 'success')\n      document.body.style.backgroundColor = '#042743';\n    } else {\n      setMode('light');\n      showAlert('Light Mode has been enabled', 'success')\n      document.body.style.backgroundColor = 'white';\n\n    }\n  };\n\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <div className=\"container-fluid mx-0 px-0\">\n            <Navbar mode={mode} toggleMode={toggleMode} />\n            <Alert alert={alert} />\n            <Route exact path='/'>\n              <TextForm heading='Enter your text...' mode={mode} showAlert={showAlert} />\n            </Route>\n            <Route exact path='/about'>\n              <About />\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}